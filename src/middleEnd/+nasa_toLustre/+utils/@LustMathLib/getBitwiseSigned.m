function [node, external_nodes, opens, abstractedNodes] = getBitwiseSigned(op, n)
    import nasa_toLustre.lustreAst.*
    opens = {};
    abstractedNodes = {};
    extNode = sprintf('int_to_int%d',n);
    UnsignedNode =  sprintf('_%s_Bitwise_Unsigned_%d',op, n);
    external_nodes = {strcat('LustDTLib_', extNode),...
        strcat('LustMathLib_', UnsignedNode)};
    
    node_name = sprintf('_%s_Bitwise_Signed_%d', op, n);
    v2_pown = 2^(n);
    bodyElts{1} = LustreEq(...
        VarIdExpr('x2'), ...
        IteExpr(...
        BinaryExpr(BinaryExpr.LT, VarIdExpr('x'), IntExpr('0')), ...
        BinaryExpr(BinaryExpr.PLUS, IntExpr(v2_pown),VarIdExpr('x')), ...
        VarIdExpr('x'))...
        );
    bodyElts{end + 1} = LustreEq(...
        VarIdExpr('y2'), ...
        IteExpr(...
        BinaryExpr(BinaryExpr.LT, VarIdExpr('y'), IntExpr('0')), ...
        BinaryExpr(BinaryExpr.PLUS, IntExpr(v2_pown),VarIdExpr('y')), ...
        VarIdExpr('y'))...
        );
    bodyElts{end + 1} = LustreEq(...
        VarIdExpr('z'), ...
        NodeCallExpr(extNode, ...
        NodeCallExpr(UnsignedNode, ...
        {VarIdExpr('x2'), VarIdExpr('y2')}))...
        );
    node = LustreNode();
    node.setName(node_name);
    node.setInputs({LustreVar('x', 'int'), LustreVar('y', 'int')});
    node.setOutputs(LustreVar('z', 'int'));
    node.setLocalVars({LustreVar('x2', 'int'), LustreVar('y2', 'int')})
    node.setBodyEqs(bodyElts);
    node.setIsMain(false);
end