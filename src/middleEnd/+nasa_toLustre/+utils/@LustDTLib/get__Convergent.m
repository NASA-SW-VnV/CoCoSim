function [node, external_nodes, opens, abstractedNodes] = get__Convergent(varargin)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright (c) 2017 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
% Author: Hamza Bourbouh <hamza.bourbouh@nasa.gov>
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %Rounds number to the nearest representable value.
    %If a tie occurs, rounds to the nearest even integer.
    %Equivalent to the Fixed-Point Designer? convergent function.
    import nasa_toLustre.lustreAst.*
    opens = {};
    abstractedNodes = {};
    node_name = '_Convergent';
    % y = floor(x+1/2) + ceiling((x-0.5)/2) - floor((x-0.5)/2) - 1
    bodyElts{1} = LustreEq(...
        VarIdExpr('y'), ...
        IteExpr(...
        BinaryExpr(BinaryExpr.EQ, VarIdExpr('x'), RealExpr('0.0')),...
        IntExpr(0), ...
        BinaryExpr.BinaryMultiArgs(BinaryExpr.PLUS, {...
        NodeCallExpr('_Floor', BinaryExpr(BinaryExpr.PLUS,VarIdExpr('x'),RealExpr('0.5'))), ...
        NodeCallExpr('_Ceiling', BinaryExpr(...
        BinaryExpr.DIVIDE,...
        BinaryExpr(BinaryExpr.MINUS,VarIdExpr('x'),RealExpr('0.5')),...
        RealExpr(2))), ...
        UnaryExpr(UnaryExpr.NEG, ...
        NodeCallExpr('_Floor', BinaryExpr(...
        BinaryExpr.DIVIDE,...
        BinaryExpr(BinaryExpr.MINUS,VarIdExpr('x'),RealExpr('0.5')),...
        RealExpr(2)))), ...
        IntExpr(-1)})));
    
    node = LustreNode();
    node.setMetaInfo('--Rounds number to the nearest representable value.');
    node.setName(node_name);
    node.setInputs(LustreVar('x', 'real'));
    node.setOutputs(LustreVar('y', 'int'));
    node.setBodyEqs(bodyElts);
    node.setIsMain(false);
    
    external_nodes = {strcat('LustMathLib_', 'fmod'), ...
        strcat('LustDTLib_', '_Floor'),...
        strcat('LustDTLib_', '_Ceiling')};
    
end