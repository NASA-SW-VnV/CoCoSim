
%% trigger value
function TriggerinputExp = getTriggerValue(Cond, triggerInput, TriggerType, TriggerBlockDt, IncomingSignalDT)
    L = nasa_toLustre.ToLustreImport.L;
    import(L{:})
    if strcmp(TriggerBlockDt, 'real')
        %suffix = '.0';
        zero = RealExpr('0.0');
        one = RealExpr('1.0');
        two = RealExpr('2.0');
    else
        %suffix = '';
        zero = IntExpr(0);
        one = IntExpr(1);
        two = IntExpr(2);
    end
    if strcmp(IncomingSignalDT, 'real')
        IncomingSignalzero = RealExpr('0.0');
    else
        IncomingSignalzero = IntExpr(0);
    end
    if strcmp(TriggerType, 'rising')
%                 sprintf(...
%                     '0%s -> if %s then 1%s else 0%s'...
%                     ,suffix, Cond, suffix, suffix );
        TriggerinputExp = ...
            BinaryExpr(BinaryExpr.ARROW, ...
            zero, ...
            IteExpr(Cond, one, zero)) ;
    elseif strcmp(TriggerType, 'falling')
%                 TriggerinputExp = sprintf(...
%                     '0%s -> if %s then -1%s else 0%s'...
%                     ,suffix, Cond, suffix, suffix );
        TriggerinputExp = ...
            BinaryExpr(BinaryExpr.ARROW, ...
            zero, ...
            IteExpr(Cond, ...
                    UnaryExpr(UnaryExpr.NEG, one),...
                    zero)) ;
    elseif strcmp(TriggerType, 'function-call')
%                 TriggerinputExp = sprintf(...
%                     '0%s -> if %s then 2%s else 0%s'...
%                     ,suffix, Cond, suffix, suffix );
        TriggerinputExp = ...
            BinaryExpr(BinaryExpr.ARROW, ...
            zero, ...
            IteExpr(Cond, ...
                    two,...
                    zero)) ;
    else
        risingCond =nasa_toLustre.utils.SLX2LusUtils.getResetCode(...
            'rising', IncomingSignalDT, triggerInput, IncomingSignalzero );
%                 TriggerinputExp = sprintf(...
%                     '%s -> if %s then (if (%s) then 1%s else -1%s) else 0%s'...
%                     ,zero,  Cond, risingCond, suffix, suffix, suffix);
        TriggerinputExp = ...
            BinaryExpr(BinaryExpr.ARROW, ...
            zero, ...
            IteExpr(Cond, ...
                    IteExpr(risingCond, one, UnaryExpr(UnaryExpr.NEG, one)),...
                    zero)) ;
    end
end
