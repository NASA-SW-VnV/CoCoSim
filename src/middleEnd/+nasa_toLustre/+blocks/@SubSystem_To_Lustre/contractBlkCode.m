function code = contractBlkCode(parent, blk, node_name, inputs, outputs, maskType, xml_trace)
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % Copyright (c) 2017 United States Government as represented by the
    % Administrator of the National Aeronautics and Space Administration.
    % All Rights Reserved.
    % Author: Hamza Bourbouh <hamza.bourbouh@nasa.gov>
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    L = nasa_toLustre.ToLustreImport.L;
    import(L{:})
    if isequal(maskType, 'ContractGuaranteeBlock')
        code = ContractGuaranteeExpr(node_name, ...
            NodeCallExpr(node_name, inputs));
        xml_trace.add_Property(...
            blk.Origin_path, ...
           nasa_toLustre.utils.SLX2LusUtils.node_name_format(parent), node_name, 1, 'guarantee')
    elseif isequal(maskType, 'ContractAssumeBlock')
        code = ContractAssumeExpr(node_name, ...
            NodeCallExpr(node_name, inputs));
        xml_trace.add_Property(...
            blk.Origin_path, ...
           nasa_toLustre.utils.SLX2LusUtils.node_name_format(parent), node_name, 1, 'assume')
    else
        if isequal(maskType, 'ContractEnsureBlock')
            xml_trace.add_Property(...
                blk.Origin_path, ...
               nasa_toLustre.utils.SLX2LusUtils.node_name_format(parent), node_name, 1, 'ensure')
        elseif isequal(maskType, 'ContractRequireBlock')
            xml_trace.add_Property(...
                blk.Origin_path, ...
               nasa_toLustre.utils.SLX2LusUtils.node_name_format(parent), node_name, 1, 'require')
        end
        code = LustreEq(outputs, ...
            NodeCallExpr(node_name, inputs));
    end
end
