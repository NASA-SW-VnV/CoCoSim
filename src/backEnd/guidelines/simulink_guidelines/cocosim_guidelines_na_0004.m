%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Author: Trinh, Khanh V <khanh.v.trinh@nasa.gov>
% Notices:
%
% Copyright @ 2020 United States Government as represented by the 
% Administrator of the National Aeronautics and Space Administration.  All 
% Rights Reserved.
%
% Disclaimers
%
% No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY 
% WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
% BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM 
% TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS 
% FOR A PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT
% THE SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT 
% DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS 
% AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN ENDORSEMENT BY 
% GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS, RESULTING 
% DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS RESULTING 
% FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY DISCLAIMS 
% ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE, IF PRESENT 
% IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT "AS IS."
%
% Waiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS 
% AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, 
% AS WELL AS ANY PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT 
% SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR 
% LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED 
% ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT SOFTWARE, RECIPIENT 
% SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS 
% CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE 
% EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR ANY SUCH MATTER 
% SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS AGREEMENT.
% 
% Notice: The accuracy and quality of the results of running CoCoSim 
% directly corresponds to the quality and accuracy of the model and the 
% requirements given as inputs to CoCoSim. If the models and requirements 
% are incorrectly captured or incorrectly input into CoCoSim, the results 
% cannot be relied upon to generate or error check software being developed. 
% Simply stated, the results of CoCoSim are only as good as
% the inputs given to CoCoSim.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [results, passed, priority] = cocosim_guidelines_na_0004(model)
%    % ORION GN&C MATLAB/Simulink Standards
    % na_0004: Simulink model appearance
    
    priority = 3;
    results = {};
    passed = 1;
    totalFail = 0;
    item_titles = {...
        'View Options: Model Browser set to unchecked', ...
        'View Options: Screen color set to white',...
        'View Options: Status bar set to checked',...
        'View Options: Tool bar set to on',...
        'View Options: Zoom factor set to normal (100%)',...
        'Block Display Options: Execution Context Indicator set to unchecked',...
        'Block Display Options: Library Link Display set to none',...
        'Block Display Options: Show Linearization Annotations set to checked',...
        'Block Display Options: Show Model Reference Block IO set to unchecked',...
        'Block Display Options: Show Model Reference Block Version set to unchecked',...
        'Block Display Options: Sample Time Colors set to off',...
        'Block Display Options: Sorted Order set to unchecked',...
        'Signal Display Options: Show Port Data Types set to unchecked',...
        'Signal Display Options: Show Line Dimensions set to unchecked',...
        'Signal Display Options: Show Storage Class set to unchecked',...
        'Signal Display Options: Show Test Point Icons set to checked',...
        'Signal Display Options: Show Viewer Icons set to checked',...
        'Signal Display Options: Wide Non-scalar Lines set to checked',...
        'Simulation: Simulation Mode set normal'...
        };
    param_names = {...
        'ModelBrowserVisibility', ...
        'ScreenColor',...
        'StatusBar',...
        'ToolBar',...
        'ZoomFactor',...
        'ExecutionContextIcon',...
        'LibraryLinkDisplay',...
        'ShowLinearizationAnnotations',...
        'ShowModelReferenceBlockIO',...
        'ShowModelReferenceBlockVersion',...
        'SampleTimeColors',...
        'SortedOrder',...
        'ShowPortDataTypes',...
        'ShowLineDimensions',...
        'ShowStorageClass',...
        'ShowTestPointIcons',...
        'ShowViewerIcons',...
        'WideLines',...
        'SimulationMode'...
        };
    param_values = {...
        'on',...            % ModelBrowserVisibility
        'white' ...         % ScreenColor
        'on',...            % StatusBar
        'on',...            % ToolBar
        '100',...           % ZoomFactor
        'off',...           % ExecutionContextIcon
        'none',...          % LibraryLinkDisplay
        'on',...            % ShowLinearizationAnnotations
        'off',...           % ShowModelReferenceBlockIO
        'off',...           % ShowModelReferenceBlockVersion
        'off',...           % SampleTimeColors
        'off',...           % SortedOrder
        'off',...           % ShowPortDataTypes
        'off',...           % ShowLineDimensions
        'off',...           % ShowStorageClass
        'on',...            % ShowTestPointIcons
        'on',...            % ShowViewerIcons
        'on',...            % WideLines
        'normal'...         % SimulationMode
        };
    
    subtitles = cell(length(item_titles)+1, 1);
    for i=1:length(item_titles)
        item_title = item_titles{i};
        param = get_param(gcs, param_names{i});
        if ~strcmp(param, param_values{i})
            fsList = {model};
        else
            fsList = {};
        end
        [subtitles{i+1}, numFail] = ...
            GuidelinesUtils.process_find_system_results(fsList,item_title,...
            true);
        totalFail = totalFail + numFail;
    end
    
    if totalFail > 0
        passed = 0;
        color = 'red';
    else
        color = 'green';
    end
    title = 'na_0004: Simulink model appearance';
    description_text = [...
        'The model appearance settings should conform to the '...
        'following guidelines when the model is released. The user ',...
        'is free to change the settings during the development process'];
    description = HtmlItem(description_text, {}, 'black', 'black');
    subtitles{1} = description;
    results{end+1} = HtmlItem(title, subtitles, color, color);
end
